{"version":3,"file":"static/js/990.e4ddb85d.chunk.js","mappings":"+PAKe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GACtBI,GAAYC,EAAAA,EAAAA,SAAO,GAevB,OAbAC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAUG,QAAS,CAAC,IACPC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAhC,SAAAC,EAAiChB,GAAO,IAAAiB,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACR,OAAxBL,EAAK,SAAAM,OAAYvB,EAAO,YAAAoB,EAAAE,KAAA,GACPE,EAAAA,EAAAA,GAAIP,GAAO,KAAD,EAAAC,EAAAE,EAAAK,KAAzBN,EAAID,EAAJC,KAERZ,EAAWY,EAAKO,SAAS,wBAAAN,EAAAO,OAAA,GAAAX,EAAA,KAC1B,gBAL+BY,GAAA,OAAAf,EAAAgB,MAAC,KAADC,UAAA,KAOhClB,EAAkBZ,GAClBQ,EAAUG,SAAU,CACtB,CACF,GAAG,CAACX,IACmB,IAAnBM,EAAQyB,QAERC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gDAKPD,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACG3B,EAAQ4B,KAAI,SAAAC,GACX,IAAQC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QACpB,OACEC,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAA,WAAAV,OAAgBc,MAEhBL,EAAAA,EAAAA,KAAA,KAAAC,SAAIK,MAHGF,EAMb,OAIR,C,mEC5CMI,EAAU,CACdC,QAAS,gCACTC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIS,SAASrB,EAAIP,GAG1B,OAFgB6B,EAAAA,EAAAA,IAAU,GAADvB,OAAIN,GAASuB,EAGxC,C","sources":["components/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'service/api';\nimport './reviews.css';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  let firstLoad = useRef(true);\n\n  useEffect(() => {\n    if (firstLoad.current) {\n      async function fetchMovieReviews(movieId) {\n        const query = `movie/${movieId}/reviews`;\n        const { data } = await api(query);\n\n        setReviews(data.results);\n      }\n\n      fetchMovieReviews(movieId);\n      firstLoad.current = false;\n    }\n  }, [movieId]);\n  if (reviews.length === 0) {\n    return (\n      <div>\n        <p>We don't have any reviews for this movie</p>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <ul>\n        {reviews.map(review => {\n          const { id, author, content } = review;\n          return (\n            <li key={id}>\n              <h3>{`Author: ${author}`}</h3>\n\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst options = {\n  baseURL: 'https://api.themoviedb.org/3/',\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMjY2MGFkYzllYmQ3MGE3N2E1NTJmYzg2YjExZjI4ZiIsInN1YiI6IjY1ZGY4NzQ0MTdiNWVmMDE4NmRhZTNlZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jqDfKpFcxQg33NCwQ8F6iWv9ZxiNesjpukoJ2UTxudw',\n  },\n};\n\nexport default function api(query) {\n  const credits = axios.get(`${query}`, options);\n\n  return credits;\n}\n"],"names":["Reviews","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","firstLoad","useRef","useEffect","current","fetchMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","query","_yield$api","data","_context","prev","next","concat","api","sent","results","stop","_x","apply","arguments","length","_jsx","children","map","review","id","author","content","_jsxs","options","baseURL","method","headers","accept","Authorization","axios"],"sourceRoot":""}