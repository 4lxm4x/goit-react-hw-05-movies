{"version":3,"file":"static/js/755.df963800.chunk.js","mappings":"+PAGe,SAASA,EAAYC,GAClC,IAAAC,EAA0CD,EAAME,KAAxCC,EAAYF,EAAZE,aAAcC,EAAIH,EAAJG,KAAMC,EAASJ,EAATI,UAE5B,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SACGJ,GACCG,EAAAA,EAAAA,KAAA,OACEG,IAAG,kCAAAC,OAAoCP,GACvCQ,IAAG,GAAAD,OAAKN,MAGVE,EAAAA,EAAAA,KAAA,OAAKG,I,60MAAkBE,IAAI,aAPtBP,IAUTE,EAAAA,EAAAA,KAAA,MAAAC,SAAKH,KACLI,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,cAAYF,SAIxB,CClBe,SAASO,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAChBI,GAAYC,EAAAA,EAAAA,SAAO,GAevB,OAbAC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAUG,QAAS,CAAC,IACPC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAhC,SAAAC,EAAiChB,GAAO,IAAAiB,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACR,OAAxBJ,EAAK,SAAApB,OAAYG,EAAO,YAAAmB,EAAAE,KAAA,GACRC,EAAAA,EAAAA,GAAIL,GAAO,KAAD,EAA1BC,EAAOC,EAAAI,KACbhB,EAAQW,EAAQM,KAAKlB,MAAM,wBAAAa,EAAAM,OAAA,GAAAT,EAAA,KAC5B,gBAJ+BU,GAAA,OAAAb,EAAAc,MAAC,KAADC,UAAA,KAMhChB,EAAkBZ,GAClBQ,EAAUG,SAAU,CACtB,CACF,GAAG,CAACX,KAGFP,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGY,EAAKuB,KAAI,SAAA1C,GACR,OACEM,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACP,EAAW,CAACG,KAAMF,KADZA,EAAM2C,GAInB,OAIR,C,mECnCMC,EAAU,CACdC,QAAS,gCACTC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIS,SAASd,EAAIL,GAG1B,OAFgBoB,EAAAA,EAAAA,IAAU,GAADxC,OAAIoB,GAASc,EAGxC,C","sources":["components/Cast/CastProfile.jsx","components/Cast/Cast.jsx","service/api.js"],"sourcesContent":["import './cast.css';\nimport placeholder from './placeholder.png';\n\nexport default function CastProfile(actor) {\n  const { profile_path, name, character } = actor.info;\n\n  return (\n    <div>\n      <ul>\n        <li key={name}>\n          {profile_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w154${profile_path}`}\n              alt={`${name}`}\n            />\n          ) : (\n            <img src={placeholder} alt=\"no_name\" />\n          )}\n        </li>\n        <li>{name}</li>\n        <li>Character: {character}</li>\n      </ul>\n    </div>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'service/api';\nimport CastProfile from './CastProfile';\nimport './cast.css';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  let firstLoad = useRef(true);\n\n  useEffect(() => {\n    if (firstLoad.current) {\n      async function fetchMovieCredits(movieId) {\n        const query = `movie/${movieId}/credits`;\n        const credits = await api(query);\n        setCast(credits.data.cast);\n      }\n\n      fetchMovieCredits(movieId);\n      firstLoad.current = false;\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {cast.map(actor => {\n          return (\n            <li key={actor.id}>\n              <CastProfile info={actor} />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst options = {\n  baseURL: 'https://api.themoviedb.org/3/',\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMjY2MGFkYzllYmQ3MGE3N2E1NTJmYzg2YjExZjI4ZiIsInN1YiI6IjY1ZGY4NzQ0MTdiNWVmMDE4NmRhZTNlZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jqDfKpFcxQg33NCwQ8F6iWv9ZxiNesjpukoJ2UTxudw',\n  },\n};\n\nexport default function api(query) {\n  const credits = axios.get(`${query}`, options);\n\n  return credits;\n}\n"],"names":["CastProfile","actor","_actor$info","info","profile_path","name","character","_jsx","children","_jsxs","src","concat","alt","Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","firstLoad","useRef","useEffect","current","fetchMovieCredits","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","query","credits","_context","prev","next","api","sent","data","stop","_x","apply","arguments","map","id","options","baseURL","method","headers","accept","Authorization","axios"],"sourceRoot":""}