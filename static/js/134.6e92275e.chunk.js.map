{"version":3,"file":"static/js/134.6e92275e.chunk.js","mappings":"uQAIe,SAASA,IACtB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAcF,EAAaG,IAAI,SACrCC,GAAoCZ,EAAAA,EAAAA,UAASU,GAAYG,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAlDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,oCAA2BH,GACvC,IAAMI,GAAOC,EAAAA,EAAAA,SAAO,GASQ,SAAAC,IAK3B,OAL2BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA5B,SAAAC,EAA6BC,GAAO,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACXC,EAAAA,EAAAA,GAAI,sBAADC,OACFP,EAAO,uCAC7B,KAAD,EAAAC,EAAAE,EAAAK,KAFON,EAAID,EAAJC,KAGRxB,EAAUwB,EAAKO,SAAS,wBAAAN,EAAAO,OAAA,GAAAX,EAAA,MACzBY,MAAA,KAAAC,UAAA,CASD,OArBAC,EAAAA,EAAAA,YAAU,WACJ7B,GAAeU,EAAKoB,WAIR,SAEUC,GAAAnB,EAAAe,MAAC,KAADC,UAAA,CALxBI,CAAchC,GACdU,EAAKoB,SAAU,EAEnB,GAAG,CAAC9B,KAiBFiC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SATV,SAAkBC,GAChBrC,EAAgB,CAAEsC,MAAOjC,IACzBgC,EAAEE,iBACF5B,EAAKoB,SAAU,CAEjB,EAI6BI,SAAA,EACvBK,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACLC,aAAa,MACbC,KAAK,SACLC,SAAU,SAAAP,GACR/B,EAAc+B,EAAEQ,OAAOC,MACzB,KAEFN,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQR,SAAC,eAExBK,EAAAA,EAAAA,KAAA,MAAAL,SACGzC,EAAOqD,KAAI,SAAAC,GACV,OACER,EAAAA,EAAAA,KAAA,MAAAL,UACEK,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CACHC,GAAE,WAAA1B,OAAawB,EAAMG,IACrBC,MAAK,GAAA5B,OAAKjB,EAAS8C,UAAQ7B,OAAGjB,EAAS+C,QAASnB,SAE/Ca,EAAMP,MAAQO,EAAMO,SALhBP,EAAMG,GASnB,QAIR,C,mEC7DMK,EAAU,CACdC,QAAS,gCACTC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIS,SAAStC,EAAIe,GAG1B,OAFgBwB,EAAAA,EAAAA,IAAU,GAADtC,OAAIc,GAASkB,EAGxC,C","sources":["pages/Movies.jsx","service/api.js"],"sourcesContent":["import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport api from 'service/api';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const [movieQuery, setMovieQuery] = useState(searchQuery);\n  const location = useLocation();\n  console.log('ðŸš€ ~ Movies ~ location:', location);\n  const load = useRef(true);\n\n  useEffect(() => {\n    if (searchQuery && load.current) {\n      onMovieSearch(searchQuery);\n      load.current = false;\n    } else return;\n  }, [searchQuery]);\n\n  async function onMovieSearch(request) {\n    const { data } = await api(\n      `search/movie?query=${request}&include_adult=true&language=en-US`\n    );\n    setMovies(data.results);\n  }\n\n  function onSubmit(e) {\n    setSearchParams({ query: movieQuery });\n    e.preventDefault();\n    load.current = true;\n    // onMovieSearch(movieQuery);\n  }\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"query\"\n          autoComplete=\"off\"\n          type=\"search\"\n          onChange={e => {\n            setMovieQuery(e.target.value);\n          }}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link\n                to={`/movies/${movie.id}`}\n                state={`${location.pathname}${location.search}`}\n              >\n                {movie.name || movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst options = {\n  baseURL: 'https://api.themoviedb.org/3/',\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMjY2MGFkYzllYmQ3MGE3N2E1NTJmYzg2YjExZjI4ZiIsInN1YiI6IjY1ZGY4NzQ0MTdiNWVmMDE4NmRhZTNlZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jqDfKpFcxQg33NCwQ8F6iWv9ZxiNesjpukoJ2UTxudw',\n  },\n};\n\nexport default function api(query) {\n  const credits = axios.get(`${query}`, options);\n\n  return credits;\n}\n"],"names":["Movies","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchQuery","get","_useState3","_useState4","movieQuery","setMovieQuery","location","useLocation","console","log","load","useRef","_onMovieSearch","_asyncToGenerator","_regeneratorRuntime","_callee","request","_yield$api","data","_context","prev","next","api","concat","sent","results","stop","apply","arguments","useEffect","current","_x","onMovieSearch","_jsxs","children","onSubmit","e","query","preventDefault","_jsx","name","autoComplete","type","onChange","target","value","map","movie","Link","to","id","state","pathname","search","title","options","baseURL","method","headers","accept","Authorization","axios"],"sourceRoot":""}