{"version":3,"file":"static/js/988.e5d7b328.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","service/api.js"],"sourcesContent":["import {\n  useParams,\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport api from 'service/api';\nimport { useEffect, useState, useRef } from 'react';\nimport './movieDetails.css';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  let firstLoad = useRef(true);\n  const location = useLocation();\n  console.log('ðŸš€ ~ MovieDetails ~ location:', location);\n\n  const [movieInfo, setMovieInfo] = useState();\n  const backLink = useRef(location.state ? `${location.state}` : `/movies`);\n\n  useEffect(() => {\n    if (firstLoad.current) {\n      async function fetchMovieDetails(movieId) {\n        const query = `movie/${movieId}`;\n\n        await api(query).then(response => {\n          const {\n            title,\n            genres,\n            release_date,\n            overview,\n            popularity,\n            poster_path,\n          } = response.data;\n          setMovieInfo({\n            title,\n            genres,\n            release_date,\n            overview,\n            popularity,\n            poster_path,\n          });\n        });\n      }\n      fetchMovieDetails(movieId);\n      firstLoad.current = false;\n    }\n  }, [movieId]);\n\n  if (!movieInfo) return;\n  else {\n    const { title, genres, release_date, overview, popularity, poster_path } =\n      movieInfo;\n    return (\n      <div className=\"movie\">\n        {<Link to={backLink.current}>Go Back</Link>}\n        <br></br>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n        <div className=\"info\">\n          <h1>{`${title} (${release_date.slice(0, 4)})`}</h1>\n          <p>User score: {Math.round(popularity)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.map(genre => genre.name).join(', ')}</p>\n          <h4>Additional information</h4>\n          <ul>\n            <li>\n              <NavLink to=\"cast\">Cast</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\">Reviews</NavLink>\n            </li>\n          </ul>\n        </div>\n        <Outlet />\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\n\nconst options = {\n  baseURL: 'https://api.themoviedb.org/3/',\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMjY2MGFkYzllYmQ3MGE3N2E1NTJmYzg2YjExZjI4ZiIsInN1YiI6IjY1ZGY4NzQ0MTdiNWVmMDE4NmRhZTNlZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jqDfKpFcxQg33NCwQ8F6iWv9ZxiNesjpukoJ2UTxudw',\n  },\n};\n\nexport default function api(query) {\n  const credits = axios.get(`${query}`, options);\n\n  return credits;\n}\n"],"names":["MovieDetails","movieId","useParams","firstLoad","useRef","location","useLocation","console","log","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","backLink","state","concat","useEffect","current","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","query","_context","prev","next","api","then","response","_response$data","data","title","genres","release_date","overview","popularity","poster_path","stop","_x","apply","arguments","_jsxs","className","children","_jsx","Link","to","src","alt","slice","Math","round","map","genre","name","join","NavLink","Outlet","options","baseURL","method","headers","accept","Authorization","axios"],"sourceRoot":""}