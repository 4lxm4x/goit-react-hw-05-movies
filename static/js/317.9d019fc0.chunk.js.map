{"version":3,"file":"static/js/317.9d019fc0.chunk.js","mappings":"uQAKe,SAASA,IACtB,IAAAC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAcF,EAAaG,IAAI,SACrCC,GAAoCC,EAAAA,EAAAA,UAASH,GAAYI,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAAlDG,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,SAAO,GAEe,SAAAC,IAKlC,OALkCA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAnC,SAAAC,EAAoCC,GAAO,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GAClBC,EAAAA,EAAAA,GAAI,sBAADC,OACFP,EAAO,uCAC7B,KAAD,EAAAC,EAAAE,EAAAK,KAFON,EAAID,EAAJC,KAGRX,EAAUW,EAAKO,SAAS,wBAAAN,EAAAO,OAAA,GAAAX,EAAA,MACzBY,MAAA,KAAAC,UAAA,CAeD,OAbAC,EAAAA,EAAAA,YAAU,WACJhC,GAAea,EAAKoB,WAVA,SAESC,GAAAnB,EAAAe,MAAC,KAADC,UAAA,CAS/BI,CAAqBnC,GACrBa,EAAKoB,SAAU,EAEnB,GAAG,CAACjC,KASFoC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SARV,SAAkBC,GAChBxC,EAAgB,CAAEyC,MAAOnC,IACzBkC,EAAEE,iBACF5B,EAAKoB,SAAU,CACjB,EAI6BI,SAAA,EACvBK,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACLC,aAAa,MACbC,KAAK,SACLC,UAAQ,EACRC,SAAU,SAAAR,GACRjC,EAAciC,EAAES,OAAOC,MACzB,KAEFP,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQR,SAAC,eAEtB5B,EAAOyC,QAAUlD,GACjB0C,EAAAA,EAAAA,KAAA,OAAKS,UAAU,YAAWd,SAAC,sKAE3BK,EAAAA,EAAAA,KAAA,MAAAL,SACG5B,EAAO2C,KAAI,SAAAC,GACV,OACEjB,EAAAA,EAAAA,MAAA,MAAmBe,UAAU,YAAWd,SAAA,CACrCgB,EAAMC,aACLZ,EAAAA,EAAAA,KAAA,OACEa,IAAG,iCAAA7B,OAAmC2B,EAAMC,aAC5CE,IAAG,GAAA9B,OAAK2B,EAAMI,UAGhBf,EAAAA,EAAAA,KAAA,OAAKa,IAAI,6BAA6BC,IAAI,aAG5Cd,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CACHC,GAAE,WAAAjC,OAAa2B,EAAMO,IACrBC,MAAK,GAAAnC,OAAKf,EAASmD,UAAQpC,OAAGf,EAASoD,QAAS1B,SAE/CgB,EAAMV,MAAQU,EAAMI,UAdhBJ,EAAMO,GAkBnB,QAKV,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport api from 'service/api';\nimport './Movies.css';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const [movieQuery, setMovieQuery] = useState(searchQuery);\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const load = useRef(true);\n\n  async function getMoviesListByQuery(request) {\n    const { data } = await api(\n      `search/movie?query=${request}&include_adult=true&language=en-US`\n    );\n    setMovies(data.results);\n  }\n\n  useEffect(() => {\n    if (searchQuery && load.current) {\n      getMoviesListByQuery(searchQuery);\n      load.current = false;\n    } else return;\n  }, [searchQuery]);\n\n  function onSubmit(e) {\n    setSearchParams({ query: movieQuery });\n    e.preventDefault();\n    load.current = true;\n  }\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"query\"\n          autoComplete=\"off\"\n          type=\"search\"\n          required\n          onChange={e => {\n            setMovieQuery(e.target.value);\n          }}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {!movies.length && searchQuery ? (\n        <div className=\"noResults\">За Вашим запитом стрічок немає</div>\n      ) : (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id} className=\"movieLink\">\n                {movie.poster_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w45${movie.poster_path}`}\n                    alt={`${movie.title}`}\n                  />\n                ) : (\n                  <img src=\"https://placehold.co/45x68\" alt=\"no_name\" />\n                )}\n\n                <Link\n                  to={`/movies/${movie.id}`}\n                  state={`${location.pathname}${location.search}`}\n                >\n                  {movie.name || movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n"],"names":["Movies","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","searchQuery","get","_useState","useState","_useState2","movieQuery","setMovieQuery","_useState3","_useState4","movies","setMovies","location","useLocation","load","useRef","_getMoviesListByQuery","_asyncToGenerator","_regeneratorRuntime","_callee","request","_yield$api","data","_context","prev","next","api","concat","sent","results","stop","apply","arguments","useEffect","current","_x","getMoviesListByQuery","_jsxs","children","onSubmit","e","query","preventDefault","_jsx","name","autoComplete","type","required","onChange","target","value","length","className","map","movie","poster_path","src","alt","title","Link","to","id","state","pathname","search"],"sourceRoot":""}