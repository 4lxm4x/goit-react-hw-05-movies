{"version":3,"file":"static/js/988.2c0e7e01.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import {\n  useParams,\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport api from 'service/api';\nimport { useEffect, useState, useRef } from 'react';\nimport './movieDetails.css';\nimport {\n  IoCaretBackCircleOutline,\n  IoPeopleOutline,\n  IoNewspaperOutline,\n} from 'react-icons/io5';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  let firstLoad = useRef(true);\n  const location = useLocation();\n\n  const [movieInfo, setMovieInfo] = useState();\n\n  const backLink = useRef(location.state ? `${location.state}` : `/movies`);\n\n  useEffect(() => {\n    if (firstLoad.current) {\n      async function getMovieDetails(movieId) {\n        const query = `movie/${movieId}`;\n\n        const { data } = await api(query);\n        const {\n          title,\n          genres,\n          release_date,\n          overview,\n          popularity,\n          poster_path,\n        } = data;\n        setMovieInfo({\n          title,\n          genres,\n          release_date,\n          overview,\n          popularity,\n          poster_path,\n        });\n      }\n      getMovieDetails(movieId);\n      firstLoad.current = false;\n    }\n  }, [movieId]);\n\n  if (!movieInfo) return;\n  else {\n    const { title, genres, release_date, overview, popularity, poster_path } =\n      movieInfo;\n    return (\n      <div className=\"movie\">\n        {\n          <Link to={backLink.current} className=\"backButton\">\n            <IoCaretBackCircleOutline />\n            Повернутися до списку фільмів\n          </Link>\n        }\n        <br></br>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n        <div className=\"info\">\n          <h1>{`${title} (${release_date.slice(0, 4)})`}</h1>\n          <p>User score: {Math.round(popularity)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.map(genre => genre.name).join(', ')}</p>\n          <h4>Additional information</h4>\n          <ul>\n            <li>\n              <NavLink to=\"cast\">\n                <IoPeopleOutline />В ролях\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\">\n                <IoNewspaperOutline />\n                Огляди\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n        <Outlet />\n      </div>\n    );\n  }\n}\n"],"names":["MovieDetails","movieId","useParams","firstLoad","useRef","location","useLocation","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","backLink","state","concat","useEffect","current","getMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","query","_yield$api","data","title","genres","release_date","overview","popularity","poster_path","_context","prev","next","api","sent","stop","_x","apply","arguments","_jsxs","className","children","Link","to","_jsx","IoCaretBackCircleOutline","src","alt","slice","Math","round","map","genre","name","join","NavLink","IoPeopleOutline","IoNewspaperOutline","Outlet"],"sourceRoot":""}